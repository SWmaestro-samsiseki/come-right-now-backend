name: come right now CICD

on:
  pull_request:
    branches: ['develop']

jobs:
  steps:
    - name: create env file
        working-directory: ./
        run: |
          touch .development.env
          echo SERVER_PORT=${{ secrets.SERVER_PORT }} >> .development.env
          echo TYPEORM_HOST=${{ secrets.TYPEORM_HOST }} >> .development.env
          echo TYPEORM_PORT=${{ secrets.TYPEORM_PORT }} >> .development.env
          echo TYPEORM_USERNAME=${{ secrets.TYPEORM_USERNAME }} >> .development.env
          echo TYPEORM_PASSWORD=${{ secrets.TYPEORM_PASSWORD }} >> .development.env
          echo TYPEORM_DATABASE=${{ secrets.TYPEORM_DATABASE }} >> .development.env
          echo JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} >> .development.env
          echo TMAP_API_KEY=${{ secrets.TMAP_API_KEY }} >> .development.env
          echo TZ=${{ secrets.TZ }} >> .development.env
          echo REDIS_ENDPOINT=${{ secrets.REDIS_ENDPOINT }} >> .development.env
          cat .development.env

  test:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        node-version: [16.15.1]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependency
        run: npm ci

      - name: Unit Test
        run: npm test

  buildAndDeploy:
    needs: [test]

    runs-on: ubuntu-18.04

    strategy:
      matrix:
        node-version: [16.15.1]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm ci

      - name: build server files
        working-directory: ./
        run: npm run build

      - name: aws 세팅
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: zip file
        run: zip -r $GITHUB_SHA.zip ./dist ./deploy.sh ./appspec.yml ./.development.env ./package.json

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://jigeumgo-prod-s3/$GITHUB_SHA.zip

      - name: deploy with AWS codeDeploy
        run: aws deploy create-deployment
          --application-name jigeumgo-prod-codedeploy
          --deployment-config-name CodeDeployDefault.OneAtATime
          --deployment-group-name jigeumgo-prod-deploygroup
          --s3-location bucket=jigeumgo-prod-s3,bundleType=zip,key=$GITHUB_SHA.zip
